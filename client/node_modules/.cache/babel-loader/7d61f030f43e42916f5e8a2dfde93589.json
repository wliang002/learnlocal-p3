{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\video\\\\Documents\\\\Bootcamp\\\\learnlocal-p3\\\\client\\\\src\\\\components\\\\ClassCard\\\\MapBox.js\";\nimport React from 'react';\nimport ReactMapboxGl from 'react-mapbox-gl';\nimport axios from 'axios';\nimport GeoCard from './GeoCard';\nimport StickyBox from 'react-sticky-box';\nconst Map = ReactMapboxGl({\n  accessToken: 'pk.eyJ1IjoibGVhcm5sb2NhbCIsImEiOiJjanlkZ2dram4wcHY1M2ptZm8wNGZrNzVkIn0.SnFaLsmeVQkX5XSj8-pp-A'\n});\nlet activeChapterName = \"full-stack-coding-bootcamp\";\n\nclass MapBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profiles: [],\n      chapters: {},\n      center: [-122.27087, 37.87189],\n      zoom: [15.0],\n      bearing: [0],\n      pitch: [0]\n    };\n\n    this.handleScroll = () => {\n      const chapterNames = Object.keys(this.state.chapters);\n\n      for (let i = 0; i < chapterNames.length; i++) {\n        let chapterName = chapterNames[i];\n\n        if (this.isElementOnScreen(chapterName)) {\n          this.setActiveChapter(chapterName);\n          console.log('the element on screen:', chapterName);\n          break;\n        }\n      }\n    };\n\n    this.setActiveChapter = chapterName => {\n      if (chapterName === activeChapterName) return;\n      this.setState({\n        'center': this.state.chapters[activeChapterName]['center']\n      });\n      console.log('centered at:', activeChapterName);\n      activeChapterName = chapterName;\n      console.log('active chapter switched to:', activeChapterName);\n    };\n\n    this.isElementOnScreen = id => {\n      const element = document.getElementById(id);\n      const bounds = element.getBoundingClientRect();\n      return bounds.top < window.innerHeight && bounds.bottom - 800 > 0;\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/profile').then(res => {\n      this.setState({\n        profiles: res.data\n      });\n      this.addChapters();\n    }).catch(err => {\n      console.log(err);\n    });\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  addClassCard() {\n    return this.state.profiles.map(profile => {\n      return React.createElement(GeoCard, {\n        userId: profile.user._id,\n        event: profile.events,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    });\n  }\n\n  addChapters() {\n    const chaps = [];\n    const newChaps = {};\n    this.state.profiles.map(profile => {\n      chaps.push(this.makeChapters(profile.events));\n      return null;\n    });\n    chaps.map(chap => {\n      if (Object.keys(chap).length === 1) {\n        newChaps[Object.keys(chap)[0]] = Object.values(chap)[0];\n      }\n\n      if (Object.keys(chap).length > 1) {\n        Object.keys(chap).map((k, i) => {\n          newChaps[k] = Object.values(chap)[i];\n          return null;\n        });\n      }\n\n      return null;\n    });\n    this.setState({\n      chapters: newChaps\n    });\n  }\n\n  makeChapters(events) {\n    const allevents = {};\n    events.map(event => {\n      allevents[event.eventName.replace(/\\s+/g, '-').toLowerCase()] = {\n        address: event.location,\n        bearing: 90,\n        center: event.geocode[0].split(',').map(parseFloat),\n        zoom: 13,\n        pitch: 40\n      };\n      return null;\n    });\n    return allevents;\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      chapters: this.addChapters()\n    });\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    const obj = {\n      's': 'mapbox://styles/mapbox/streets-v10'\n    };\n    return React.createElement(\"div\", {\n      className: \"MapClassCardContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(StickyBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Map, {\n      style: obj.s,\n      center: this.state.center,\n      zoom: [15.0],\n      bearing: [0],\n      pitch: [0],\n      className: \"the-map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"features\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Sign up for a class happening in your neighborhood.\"), this.addClassCard()));\n  }\n\n}\n\nexport default MapBox;","map":{"version":3,"sources":["C:\\Users\\video\\Documents\\Bootcamp\\learnlocal-p3\\client\\src\\components\\ClassCard\\MapBox.js"],"names":["React","ReactMapboxGl","axios","GeoCard","StickyBox","Map","accessToken","activeChapterName","MapBox","Component","state","profiles","chapters","center","zoom","bearing","pitch","handleScroll","chapterNames","Object","keys","i","length","chapterName","isElementOnScreen","setActiveChapter","console","log","setState","id","element","document","getElementById","bounds","getBoundingClientRect","top","window","innerHeight","bottom","componentDidMount","get","then","res","data","addChapters","catch","err","addEventListener","addClassCard","map","profile","user","_id","events","chaps","newChaps","push","makeChapters","chap","values","k","allevents","event","eventName","replace","toLowerCase","address","location","geocode","split","parseFloat","componentWillUnmount","removeEventListener","render","obj","s"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactMapboxGl from 'react-mapbox-gl'\r\nimport axios from 'axios'\r\nimport GeoCard from './GeoCard'\r\nimport StickyBox from 'react-sticky-box'\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken: 'pk.eyJ1IjoibGVhcm5sb2NhbCIsImEiOiJjanlkZ2dram4wcHY1M2ptZm8wNGZrNzVkIn0.SnFaLsmeVQkX5XSj8-pp-A'\r\n})\r\n\r\nlet activeChapterName = `full-stack-coding-bootcamp`;\r\n\r\nclass MapBox extends React.Component {\r\n  state = {\r\n    profiles: [],\r\n    chapters: {},\r\n    center: [-122.27087, 37.87189],\r\n    zoom: [15.0],\r\n    bearing: [0],\r\n    pitch: [0]\r\n  }\r\n\r\n  componentDidMount() { \r\n    axios.get('/api/profile')\r\n      .then(res => {\r\n        this.setState({ profiles: res.data })\r\n        this.addChapters()\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n\r\n    window.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  addClassCard() {\r\n    return this.state.profiles.map(profile => {\r\n      return <GeoCard userId={profile.user._id} event={profile.events} />\r\n    })\r\n  }\r\n\r\n  addChapters() {\r\n    const chaps = []\r\n    const newChaps = {}\r\n    this.state.profiles.map(profile => {\r\n      chaps.push(this.makeChapters(profile.events))\r\n      return null\r\n    })\r\n\r\n    chaps.map(chap => {\r\n        if (Object.keys(chap).length  === 1) {\r\n          newChaps[Object.keys(chap)[0]] = Object.values(chap)[0]\r\n        } \r\n        if (Object.keys(chap).length  > 1) {\r\n          Object.keys(chap).map( (k,i) => {\r\n            newChaps[k] = Object.values(chap)[i]\r\n            return null\r\n          })\r\n        }\r\n        return null\r\n    })\r\n    this.setState({ chapters: newChaps })\r\n    \r\n  }\r\n\r\n  makeChapters(events) {\r\n    const allevents = {}\r\n    events.map(event => {\r\n      allevents[event.eventName.replace(/\\s+/g, '-').toLowerCase()] = {\r\n        address: event.location,\r\n        bearing: 90,\r\n        center: event.geocode[0].split(',').map(parseFloat),\r\n        zoom: 13,\r\n        pitch: 40\r\n      }\r\n      return null\r\n    })\r\n    return allevents\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ chapters: this.addChapters() })\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const chapterNames = Object.keys(this.state.chapters);\r\n    for (let i = 0; i < chapterNames.length; i++) {\r\n      let chapterName = chapterNames[i];\r\n      if (this.isElementOnScreen(chapterName)) {\r\n        this.setActiveChapter(chapterName);\r\n        console.log('the element on screen:', chapterName)\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  setActiveChapter = (chapterName) => {\r\n    if (chapterName === activeChapterName) return;\r\n    this.setState({ 'center': this.state.chapters[activeChapterName]['center'] })\r\n    console.log('centered at:', activeChapterName)\r\n    activeChapterName = chapterName;\r\n    console.log('active chapter switched to:', activeChapterName)\r\n  }\r\n\r\n  isElementOnScreen = (id) => {\r\n    const element = document.getElementById(id);\r\n    const bounds = element.getBoundingClientRect();\r\n    return bounds.top < window.innerHeight && bounds.bottom - 800 > 0;\r\n  }\r\n\r\n  render() {\r\n    const obj = {'s':'mapbox://styles/mapbox/streets-v10'}\r\n    return (\r\n\r\n        <div className='MapClassCardContainer'>\r\n          <StickyBox>\r\n            <Map\r\n              style= {obj.s}\r\n              center={this.state.center}\r\n              zoom={[15.0]}\r\n              bearing={[0]}\r\n              pitch={[0]}\r\n              className='the-map'\r\n            />\r\n          </StickyBox>\r\n          <div id='features'>\r\n            <h2>Sign up for a class happening in your neighborhood.</h2>\r\n            {this.addClassCard()}\r\n          </div>\r\n        </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapBox\r\n"]},"metadata":{},"sourceType":"module"}