{"ast":null,"code":"import _slicedToArray from \"/Users/hettychin/Desktop/UCBerkExtBootcamp2019/Project3/learnlocal-p3/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hettychin/Desktop/UCBerkExtBootcamp2019/Project3/learnlocal-p3/client/src/components/Header/CollapsibleHeader.js\";\nimport React, { useState, Fragment } from 'react'; // import Collapsible from 'react-collapsible'\n\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth'; // different way of collapsing\n\nconst CollapsibleHeader = ({\n  auth: {\n    isAuthenticated,\n    loading\n  },\n  logout\n}) => {\n  const authLinks = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"collapsibleLogInBtns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/dashboard\",\n    className: \"dropdown-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), \"\\xA0Dashboard\")), React.createElement(\"div\", {\n    className: \"collapsibleLogInBtns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    onClick: logout,\n    href: \"#!\",\n    className: \"dropdown-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-sign-out-alt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), \"\\xA0Logout\")));\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        displayDropDownItems = _useState2[0],\n        toggleDropDownItems = _useState2[1];\n\n  return React.createElement(\"div\", {\n    className: \"collapsibleHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dropDownBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => toggleDropDownItems(!displayDropDownItems),\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"\\u2630\")), displayDropDownItems && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dropDownItems\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"something\")));\n}; // ****** previous collapsible header *****\n// const CollapsibleHeader = ({ auth: { isAuthenticated, loading }, logout }) => {\n// const authLinks = (\n//   <div>\n//     <div className='collapsibleLogInBtns'>\n//       <Link to='/dashboard' className='dropdown-item'>\n//         <i className='fas fa-user' />&nbsp;Dashboard\n//       </Link>\n//     </div>\n//     <div className='collapsibleLogInBtns'>\n//       <a onClick={logout} href='#!' className='dropdown-item'>\n//         <i className='fas fa-sign-out-alt' />&nbsp;Logout\n//       </a>\n//     </div>\n//   </div>\n// )\n\n\nconst guestLinks = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"collapsibleLogInBtns\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/login\",\n  className: \"dropdown-item\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-user\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}), \"\\xA0Login\")), React.createElement(\"div\", {\n  className: \"collapsibleLogInBtns\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/register\",\n  className: \"dropdown-item\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-user\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}), \"\\xA0Create an Account\"))); //   return (\n//     <div className='collapsibleHeader'>\n//       <Collapsible trigger='â˜°' className='three-Lines'>\n//         <div className='collapsibleCategories'>\n//           <Collapsible trigger='Browse Classes'>\n//             <Link to='/learn-by-category' className='dropdown-item'>All Classes</Link>\n//             <Link to='/art' className='dropdown-item'>\n//             Art\n//             </Link>\n//             <Link to='/cooking' className='dropdown-item'>\n//               Cooking\n//             </Link>\n//             <Link to='/craft' className='dropdown-item'>\n//             Craft\n//             </Link>\n//             <Link to='/creative' className='dropdown-item'>\n//               Creative\n//             </Link>\n//             <Link to='/garden' className='dropdown-item'>\n//               Garden\n//             </Link>\n//             <Link to='/movement' className='dropdown-item'>\n//             Movement\n//             </Link>\n//             <Link to='/social' className='dropdown-item'>\n//             Social\n//             </Link>\n//             <Link to='/technology' className='dropdown-item'>\n//               Technology\n//             </Link>\n//             <Link to='/wellness' className='dropdown-item'>\n//               Wellness\n//             </Link>\n//             <Link to='/other' className='dropdown-item'>\n//             Other\n//             </Link>\n//           </Collapsible>\n//         </div>\n//         <div className='collapsibleTeachersBtn'>\n//           <p>\n//             <Link to='/profiles' className='dropdown-item'>\n//               Teacher Directory\n//             </Link>\n//           </p>\n//         </div>\n//         {/* different buttons depending on whether logged in */}\n//         {!loading && (\n//           <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n//         )}\n//       </Collapsible>\n//     </div>\n//   )\n// }\n\nCollapsibleHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logout\n})(CollapsibleHeader);","map":{"version":3,"sources":["/Users/hettychin/Desktop/UCBerkExtBootcamp2019/Project3/learnlocal-p3/client/src/components/Header/CollapsibleHeader.js"],"names":["React","useState","Fragment","Link","connect","PropTypes","logout","CollapsibleHeader","auth","isAuthenticated","loading","authLinks","displayDropDownItems","toggleDropDownItems","guestLinks","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react'\n// import Collapsible from 'react-collapsible'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { logout } from '../../actions/auth'\n\n// different way of collapsing\nconst CollapsibleHeader = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <div>\n      <div className='collapsibleLogInBtns'>\n        <Link to='/dashboard' className='dropdown-item'>\n          <i className='fas fa-user' />&nbsp;Dashboard\n        </Link>\n      </div>\n      <div className='collapsibleLogInBtns'>\n        <a onClick={logout} href='#!' className='dropdown-item'>\n          <i className='fas fa-sign-out-alt' />&nbsp;Logout\n        </a>\n      </div>\n    </div>\n  )\n\n  const [displayDropDownItems, toggleDropDownItems] = useState(false)\n  return (\n    <div className='collapsibleHeader'>\n      <div className='dropDownBtn'>\n        <button\n          onClick={() => toggleDropDownItems(!displayDropDownItems)}\n          type='button'>\n        â˜°\n        </button>\n      </div>\n      {displayDropDownItems && (\n        <Fragment>\n          <div className='dropDownItems'>something</div>\n        </Fragment>\n      )}\n    </div>\n  )\n}\n\n// ****** previous collapsible header *****\n// const CollapsibleHeader = ({ auth: { isAuthenticated, loading }, logout }) => {\n// const authLinks = (\n//   <div>\n//     <div className='collapsibleLogInBtns'>\n//       <Link to='/dashboard' className='dropdown-item'>\n//         <i className='fas fa-user' />&nbsp;Dashboard\n//       </Link>\n//     </div>\n//     <div className='collapsibleLogInBtns'>\n//       <a onClick={logout} href='#!' className='dropdown-item'>\n//         <i className='fas fa-sign-out-alt' />&nbsp;Logout\n//       </a>\n//     </div>\n//   </div>\n// )\n\n  const guestLinks = (\n    <div>\n      <div className='collapsibleLogInBtns'>\n        <Link to='/login'className='dropdown-item'>\n          <i className='fas fa-user' />&nbsp;Login\n        </Link>\n      </div>\n      <div className='collapsibleLogInBtns'>\n        <Link to='/register' className='dropdown-item'>\n          <i className='fas fa-user' />&nbsp;Create an Account\n        </Link>\n      </div>\n    </div>\n  )\n\n//   return (\n//     <div className='collapsibleHeader'>\n//       <Collapsible trigger='â˜°' className='three-Lines'>\n//         <div className='collapsibleCategories'>\n//           <Collapsible trigger='Browse Classes'>\n//             <Link to='/learn-by-category' className='dropdown-item'>All Classes</Link>\n//             <Link to='/art' className='dropdown-item'>\n//             Art\n//             </Link>\n//             <Link to='/cooking' className='dropdown-item'>\n//               Cooking\n//             </Link>\n//             <Link to='/craft' className='dropdown-item'>\n//             Craft\n//             </Link>\n//             <Link to='/creative' className='dropdown-item'>\n//               Creative\n//             </Link>\n//             <Link to='/garden' className='dropdown-item'>\n//               Garden\n//             </Link>\n//             <Link to='/movement' className='dropdown-item'>\n//             Movement\n//             </Link>\n//             <Link to='/social' className='dropdown-item'>\n//             Social\n//             </Link>\n//             <Link to='/technology' className='dropdown-item'>\n//               Technology\n//             </Link>\n//             <Link to='/wellness' className='dropdown-item'>\n//               Wellness\n//             </Link>\n//             <Link to='/other' className='dropdown-item'>\n//             Other\n//             </Link>\n//           </Collapsible>\n//         </div>\n//         <div className='collapsibleTeachersBtn'>\n//           <p>\n//             <Link to='/profiles' className='dropdown-item'>\n//               Teacher Directory\n//             </Link>\n//           </p>\n//         </div>\n//         {/* different buttons depending on whether logged in */}\n//         {!loading && (\n//           <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n//         )}\n//       </Collapsible>\n//     </div>\n//   )\n// }\n\nCollapsibleHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(CollapsibleHeader)\n"]},"metadata":{},"sourceType":"module"}