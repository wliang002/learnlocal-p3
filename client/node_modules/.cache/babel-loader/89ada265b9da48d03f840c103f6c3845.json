{"ast":null,"code":"var _jsxFileName = \"/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/src/components/mapFlyOver/MapBox.js\";\nimport React from 'react';\nimport ReactMapboxGl from 'react-mapbox-gl';\nimport axios from 'axios';\nimport GeoCard from './GeoCard';\nimport StickyBox from 'react-sticky-box'; // h/t to https://docs.mapbox.com/mapbox-gl-js/example/scroll-fly-to/\n// h/t to https://github.com/alex3165/react-mapbox-gl\n\nconst Map = ReactMapboxGl({\n  accessToken: 'pk.eyJ1IjoibGVhcm5sb2NhbCIsImEiOiJjanlkZ2dram4wcHY1M2ptZm8wNGZrNzVkIn0.SnFaLsmeVQkX5XSj8-pp-A'\n}); // anchor the beginning center for the map\n\nlet activeChapterName = 'designing-websites-for-everyone';\n\nclass MapBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profiles: [],\n      chapters: {},\n      center: [-122.27087, 37.87189],\n      zoom: [15.0],\n      bearing: [0],\n      pitch: [0]\n    };\n\n    this.handleScroll = () => {\n      console.log(this.state.chapters);\n      console.log(chapterNames);\n      const chapterNames = Object.keys(this.state.chapters);\n\n      for (let i = 0; i < chapterNames.length; i++) {\n        let chapterName = chapterNames[i];\n\n        if (this.isElementOnScreen(chapterName)) {\n          this.setActiveChapter(chapterName);\n          console.log('the element on screen:', chapterName);\n          break;\n        }\n      }\n    };\n\n    this.setActiveChapter = chapterName => {\n      if (chapterName === activeChapterName) return;\n      this.setState({\n        'center': this.state.chapters[activeChapterName]['center']\n      });\n      console.log('centered at:', activeChapterName);\n      activeChapterName = chapterName;\n      console.log('active chapter switched to:', activeChapterName);\n    };\n\n    this.isElementOnScreen = id => {\n      const element = document.getElementById(id);\n      const bounds = element.getBoundingClientRect();\n      return bounds.top < window.innerHeight && bounds.bottom - 800 > 0;\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/profile').then(res => {\n      this.setState({\n        profiles: res.data\n      });\n      this.addChapters();\n      console.log(this.state);\n    }).catch(err => {\n      console.log(err);\n    });\n    window.addEventListener('scroll', this.handleScroll);\n  } // add all of the classes\n\n\n  addClassCard() {\n    return this.state.profiles.map(profile => {\n      return React.createElement(GeoCard, {\n        userId: profile.user._id,\n        event: profile.events,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    });\n  }\n\n  addChapters() {\n    const chaps = [];\n    const newChaps = {};\n    this.state.profiles.map(profile => {\n      chaps.push(this.makeChapters(profile.events));\n      return null;\n    });\n    chaps.map(chap => {\n      if (Object.keys(chap).length === 1) {\n        newChaps[Object.keys(chap)[0]] = Object.values(chap)[0];\n      }\n\n      if (Object.keys(chap).length > 1) {\n        Object.keys(chap).map((k, i) => {\n          newChaps[k] = Object.values(chap)[i];\n          return null;\n        });\n      }\n\n      return null;\n    });\n    this.setState({\n      chapters: newChaps\n    });\n  } // for each event set their center based on the geocode from the database\n\n\n  makeChapters(events) {\n    const allevents = {};\n    events.map(event => {\n      allevents[event.eventName.replace(/\\s+/g, '-').toLowerCase()] = {\n        address: event.location,\n        bearing: 90,\n        center: event.geocode[0].split(',').map(parseFloat),\n        zoom: 13,\n        pitch: 40\n      };\n      return null;\n    });\n    return allevents;\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      chapters: this.addChapters()\n    });\n    window.removeEventListener('scroll', this.handleScroll);\n  } // define the active chapter as the one that is one the screen\n\n\n  render() {\n    const obj = {\n      's': 'mapbox://styles/mapbox/streets-v10'\n    };\n    return React.createElement(\"div\", {\n      className: \"MapClassCardContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(StickyBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Map, {\n      style: obj.s,\n      center: this.state.center,\n      zoom: [15.0],\n      bearing: [0],\n      pitch: [0],\n      className: \"the-map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"features\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Sign up for a class happening in your neighborhood.\"), this.addClassCard()));\n  }\n\n}\n\nexport default MapBox;","map":{"version":3,"sources":["/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/src/components/mapFlyOver/MapBox.js"],"names":["React","ReactMapboxGl","axios","GeoCard","StickyBox","Map","accessToken","activeChapterName","MapBox","Component","state","profiles","chapters","center","zoom","bearing","pitch","handleScroll","console","log","chapterNames","Object","keys","i","length","chapterName","isElementOnScreen","setActiveChapter","setState","id","element","document","getElementById","bounds","getBoundingClientRect","top","window","innerHeight","bottom","componentDidMount","get","then","res","data","addChapters","catch","err","addEventListener","addClassCard","map","profile","user","_id","events","chaps","newChaps","push","makeChapters","chap","values","k","allevents","event","eventName","replace","toLowerCase","address","location","geocode","split","parseFloat","componentWillUnmount","removeEventListener","render","obj","s"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactMapboxGl from 'react-mapbox-gl'\nimport axios from 'axios'\nimport GeoCard from './GeoCard'\nimport StickyBox from 'react-sticky-box'\n\n// h/t to https://docs.mapbox.com/mapbox-gl-js/example/scroll-fly-to/\n// h/t to https://github.com/alex3165/react-mapbox-gl\n\nconst Map = ReactMapboxGl({\n  accessToken: 'pk.eyJ1IjoibGVhcm5sb2NhbCIsImEiOiJjanlkZ2dram4wcHY1M2ptZm8wNGZrNzVkIn0.SnFaLsmeVQkX5XSj8-pp-A'\n})\n\n\n// anchor the beginning center for the map\nlet activeChapterName = 'designing-websites-for-everyone'\n\nclass MapBox extends React.Component {\n  state = {\n    profiles: [],\n    chapters: {},\n    center: [-122.27087, 37.87189],\n    zoom: [15.0],\n    bearing: [0],\n    pitch: [0]\n  }\n\n  componentDidMount() { \n    axios.get('/api/profile')\n      .then(res => {\n        this.setState({ profiles: res.data })\n        this.addChapters()\n        console.log(this.state)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n\n    window.addEventListener('scroll', this.handleScroll);\n  }\n  // add all of the classes\n  addClassCard() {\n    return this.state.profiles.map(profile => {\n      return <GeoCard userId={profile.user._id} event={profile.events} />\n    })\n  }\n\n  addChapters() {\n    const chaps = []\n    const newChaps = {}\n    this.state.profiles.map(profile => {\n      chaps.push(this.makeChapters(profile.events))\n      return null\n    })\n\n    chaps.map(chap => {\n        if (Object.keys(chap).length  === 1) {\n          newChaps[Object.keys(chap)[0]] = Object.values(chap)[0]\n        } \n        if (Object.keys(chap).length  > 1) {\n          Object.keys(chap).map( (k,i) => {\n            newChaps[k] = Object.values(chap)[i]\n            return null\n          })\n        }\n        return null\n    })\n    this.setState({ chapters: newChaps })\n  }\n  // for each event set their center based on the geocode from the database\n  makeChapters(events) {\n    const allevents = {}\n    events.map(event => {\n      allevents[event.eventName.replace(/\\s+/g, '-').toLowerCase()] = {\n        address: event.location,\n        bearing: 90,\n        center: event.geocode[0].split(',').map(parseFloat),\n        zoom: 13,\n        pitch: 40\n      }\n      return null\n    })\n    return allevents\n  }\n\n  componentWillUnmount() {\n    \n    this.setState({ chapters: this.addChapters() })\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n  // define the active chapter as the one that is one the screen\n  handleScroll = () => {\n    console.log(this.state.chapters)\n    console.log(chapterNames)\n    const chapterNames = Object.keys(this.state.chapters);\n    for (let i = 0; i < chapterNames.length; i++) {\n      let chapterName = chapterNames[i];\n      if (this.isElementOnScreen(chapterName)) {\n        this.setActiveChapter(chapterName);\n        console.log('the element on screen:', chapterName)\n        break;\n      }\n    }\n  }\n  // the active chapter centers at the geocode\n  setActiveChapter = (chapterName) => {\n    if (chapterName === activeChapterName) return;\n    this.setState({ 'center': this.state.chapters[activeChapterName]['center'] })\n    console.log('centered at:', activeChapterName)\n    activeChapterName = chapterName;\n    console.log('active chapter switched to:', activeChapterName)\n  }\n  // read which chapter is on the screen\n  isElementOnScreen = (id) => {\n    const element = document.getElementById(id);\n    const bounds = element.getBoundingClientRect();\n    return bounds.top < window.innerHeight && bounds.bottom - 800 > 0;\n  }\n\n  render() {\n    const obj = {'s':'mapbox://styles/mapbox/streets-v10'}\n    return (\n\n        <div className='MapClassCardContainer'>\n          {/* keep the map fixed */}\n          <StickyBox>\n            <Map\n              style= {obj.s}\n              center={this.state.center}\n              zoom={[15.0]}\n              bearing={[0]}\n              pitch={[0]}\n              className='the-map'\n            />\n          </StickyBox>\n          {/* but not the classcards */}\n          <div id='features'>\n            <h2>Sign up for a class happening in your neighborhood.</h2>\n            {this.addClassCard()}\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default MapBox\n"]},"metadata":{},"sourceType":"module"}