{"ast":null,"code":"import _objectSpread from \"/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/src/components/allForms/TeachForm/EditTeach.js\";\nimport React, { useState, useEffect } from 'react';\nimport './TeachForm.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateEvent, getEventById } from '../../../actions/profile'; // import Geocoder from 'react-native-geocoding'\n// @resources https://itnext.io/how-i-tried-to-validate-react-forms-with-hooks-31634fc5385b\n// Geocoder.init(process.env.Geo_key)\n\nconst EditTeach = ({\n  profile: {\n    profile\n  },\n  updateEvent,\n  getEventById,\n  history,\n  match\n}) => {\n  const _useState = useState({\n    teachersName: '',\n    eventName: '',\n    eventType: '',\n    location: '',\n    geocode: [],\n    eventDate: '',\n    eventTime: '',\n    eventSize: '',\n    description: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  useEffect(() => {\n    getEventById(match.params.id);\n    setFormData({\n      teachersName: profile.teachersName,\n      eventType: profile.eventType,\n      eventName: profile.eventName,\n      location: profile.location,\n      eventDate: profile.eventDate,\n      eventTime: profile.eventTime,\n      eventSize: profile.eventSize,\n      description: profile.description\n    });\n  }, [getEventById]);\n  const teachersName = formData.teachersName,\n        eventName = formData.eventName,\n        eventType = formData.eventType,\n        location = formData.location,\n        eventDate = formData.eventDate,\n        eventTime = formData.eventTime,\n        eventSize = formData.eventSize,\n        description = formData.description;\n\n  const onChange = e => {\n    setFormData(_objectSpread({}, formData, {\n      [e.target.name]: e.target.value\n    }));\n  }; // h/t to https://github.com/marlove/react-native-geocoding\n  // when the person adding a class moves on from the address field, geocode the location.\n  // const onLocationInputBlur = e => {\n  //   Geocoder.from(e.target.value).then(json => {\n  //     var locationObject = json.results[0].geometry.location\n  //     // the geocode is in an object so extract it into an array in the order that we want\n  //     var locationArray = []\n  //     locationArray.push(locationObject.lng, locationObject.lat)\n  //     // then turn it into a string before pushing to database\n  //     var locationString = locationArray.toString()\n  //     setFormData({ ...formData, 'geocode': locationString })\n  //   }).catch(error => console.warn(error))\n  // }\n\n\n  return React.createElement(\"div\", {\n    className: \"HostClassContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Teach\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Host a class for your neighbors.\"), React.createElement(\"div\", {\n    className: \"teachForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    id: \"addClass\",\n    className: \"form\",\n    onSubmit: e => {\n      e.preventDefault();\n      updateEvent(match.params.id, formData, history);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"teachersName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Teacher's Name:\"), React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"teachersName\",\n    rows: \"1\",\n    placeholder: \"List all the teachers for this class.\",\n    name: \"teachersName\",\n    value: teachersName,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"categorySelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"What kind of class are you teaching?\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"categorySelect\",\n    name: \"eventType\",\n    value: eventType,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Select a category.\"), React.createElement(\"option\", {\n    value: \"Art\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Art\"), React.createElement(\"option\", {\n    value: \"Cooking\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Cooking\"), React.createElement(\"option\", {\n    value: \"Craft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Craft\"), React.createElement(\"option\", {\n    value: \"Creative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Creative\"), React.createElement(\"option\", {\n    value: \"Garden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Garden\"), React.createElement(\"option\", {\n    value: \"Movement\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Movement\"), React.createElement(\"option\", {\n    value: \"Social\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Social\"), React.createElement(\"option\", {\n    value: \"Technology\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Technology\"), React.createElement(\"option\", {\n    value: \"Wellness\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Wellness\"), React.createElement(\"option\", {\n    value: \"Other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Other\"))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"eventname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Class name:\"), React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"eventName\",\n    rows: \"1\",\n    placeholder: \"Give you class a name.\",\n    name: \"eventName\",\n    value: eventName,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Where is this class taking place?\"), React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"location\",\n    rows: \"2\",\n    placeholder: \"Street, City, State\",\n    name: \"location\",\n    value: location // onBlur={e => onLocationInputBlur(e)}\n    ,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Date:\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"date\",\n    type: \"date\",\n    placeholder: \"date\",\n    name: \"eventDate\",\n    value: eventDate,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Time:\"), React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"time\",\n    rows: \"1\",\n    placeholder: \"hh:mm am/pm\",\n    name: \"eventTime\",\n    value: eventTime,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Class size: \"), React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"eventSize\",\n    rows: \"1\",\n    placeholder: \"How many students can sign up for your class?\",\n    name: \"eventSize\",\n    value: eventSize,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Description:\"), React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"description\",\n    rows: \"8\",\n    placeholder: \"What should students know about your class?\",\n    name: \"description\",\n    value: description,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"submit-btn btn \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), React.createElement(Link, {\n    className: \"btn back-btn\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-caret-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), \"\\xA0Go Back\"))));\n};\n\nEditTeach.propTypes = {\n  updateEvent: PropTypes.func.isRequired,\n  getEventById: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  updateEvent,\n  getEventById\n})(withRouter(EditTeach));","map":{"version":3,"sources":["/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/src/components/allForms/TeachForm/EditTeach.js"],"names":["React","useState","useEffect","Link","withRouter","PropTypes","connect","updateEvent","getEventById","EditTeach","profile","history","match","teachersName","eventName","eventType","location","geocode","eventDate","eventTime","eventSize","description","formData","setFormData","params","id","onChange","e","target","name","value","preventDefault","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './TeachForm.css'\nimport { Link, withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { updateEvent, getEventById } from '../../../actions/profile'\n// import Geocoder from 'react-native-geocoding'\n\n// @resources https://itnext.io/how-i-tried-to-validate-react-forms-with-hooks-31634fc5385b\n// Geocoder.init(process.env.Geo_key)\n\nconst EditTeach = ({ profile:{ profile }, updateEvent, getEventById, history, match }) => {\n  const [formData, setFormData] = useState({\n    teachersName: '',\n    eventName: '',\n    eventType: '',\n    location: '',\n    geocode: [],\n    eventDate: '',\n    eventTime: '',\n    eventSize: '',\n    description: ''\n  })\n\n  useEffect(() => {\n    getEventById(match.params.id)\n\n    setFormData({\n      teachersName: profile.teachersName,\n      eventType: profile.eventType,\n      eventName: profile.eventName,\n      location: profile.location,\n      eventDate: profile.eventDate,\n      eventTime: profile.eventTime,\n      eventSize: profile.eventSize,\n      description: profile.description\n    })\n  }, [getEventById])\n\n  const {\n    teachersName,\n    eventName,\n    eventType,\n    location,\n    eventDate,\n    eventTime,\n    eventSize,\n    description\n  } = formData\n\n  const onChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n  }\n  // h/t to https://github.com/marlove/react-native-geocoding\n  // when the person adding a class moves on from the address field, geocode the location.\n  // const onLocationInputBlur = e => {\n  //   Geocoder.from(e.target.value).then(json => {\n  //     var locationObject = json.results[0].geometry.location\n  //     // the geocode is in an object so extract it into an array in the order that we want\n  //     var locationArray = []\n  //     locationArray.push(locationObject.lng, locationObject.lat)\n  //     // then turn it into a string before pushing to database\n  //     var locationString = locationArray.toString()\n  //     setFormData({ ...formData, 'geocode': locationString })\n  //   }).catch(error => console.warn(error))\n  // }\n\n  return (\n    <div className='HostClassContainer'>\n      <h1>Teach</h1>\n      <hr />\n      <h2>Host a class for your neighbors.</h2>\n      <div className='teachForm'>\n        <form id='addClass'\n          className='form'\n          onSubmit={e => {\n            e.preventDefault()\n            updateEvent(match.params.id, formData, history)\n          }}\n        >\n          <div className='form-group'>\n            <label htmlFor='teachersName'>Teacher's Name:</label>\n            <textarea\n              className='form-control'\n              id='teachersName'\n              rows='1'\n              placeholder='List all the teachers for this class.'\n              name='teachersName'\n              value={teachersName}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n          <div className='form-group'>\n            <label htmlFor='categorySelect'>What kind of class are you teaching?</label>\n            <select className='form-control'\n              id='categorySelect'\n              name='eventType'\n              value={eventType}\n              onChange={e => onChange(e)}\n            >\n              <option value='0'>Select a category.</option>\n              <option value='Art'>Art</option>\n              <option value='Cooking'>Cooking</option>\n              <option value='Craft'>Craft</option>\n              <option value='Creative'>Creative</option>\n              <option value='Garden'>Garden</option>\n              <option value='Movement'>Movement</option>\n              <option value='Social'>Social</option>\n              <option value='Technology'>Technology</option>\n              <option value='Wellness'>Wellness</option>\n              <option value='Other'>Other</option>\n            </select>\n          </div>\n          <div className='form-group'>\n            <label htmlFor='eventname'>Class name:</label>\n            <textarea\n              className='form-control'\n              id='eventName'\n              rows='1'\n              placeholder='Give you class a name.'\n              name='eventName'\n              value={eventName}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n          <div className='form-group'>\n            <label htmlFor='location'>\n              Where is this class taking place?\n            </label>\n            <textarea\n              className='form-control'\n              id='location'\n              rows='2'\n              placeholder='Street, City, State'\n              name='location'\n              value={location}\n              // onBlur={e => onLocationInputBlur(e)}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n\n          <div className='form-group'>\n            <label htmlFor='location'>Date:</label>\n            <input\n              className='form-control'\n              id='date'\n              type='date'\n              placeholder='date'\n              name='eventDate'\n              value={eventDate}\n              onChange={e => onChange(e)}\n              required />\n          </div>\n          <div className='form-group'>\n            <label htmlFor='location'>Time:</label>\n            <textarea\n              className='form-control'\n              id='time'\n              rows='1'\n              placeholder='hh:mm am/pm'\n              name='eventTime'\n              value={eventTime}\n              onChange={e => onChange(e)}\n              required />\n          </div>\n          <div className='form-group'>\n            <label htmlFor='location'>Class size: </label>\n            <textarea\n              className='form-control'\n              id='eventSize'\n              rows='1'\n              placeholder='How many students can sign up for your class?'\n              name='eventSize'\n              value={eventSize}\n              onChange={e => onChange(e)}\n              required />\n          </div>\n          <div className='form-group'>\n            <label htmlFor='description'>Description:</label>\n            <textarea\n              className='form-control'\n              id='description'\n              rows='8'\n              placeholder='What should students know about your class?'\n              name='description'\n              value={description}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n          <input type='submit' className='submit-btn btn ' />\n          <Link className='btn back-btn' to='/dashboard'>\n            <i className='fas fa-caret-left' />&nbsp;Go Back\n          </Link>\n        </form>\n      </div>\n    </div >\n  )\n}\nEditTeach.propTypes = {\n  updateEvent: PropTypes.func.isRequired,\n  getEventById: PropTypes.func.isRequired\n\n}\nconst mapStateToProps = state => ({\n  profile: state.profile\n})\n\nexport default connect(\n  mapStateToProps,\n  { updateEvent, getEventById }\n)(withRouter(EditTeach))\n"]},"metadata":{},"sourceType":"module"}