{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\video\\\\Documents\\\\Bootcamp\\\\learnlocal-p3\\\\client\\\\src\\\\components\\\\TeachersDisplays\\\\Profiles.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ProfileItem from './ProfileItem';\nimport { getProfiles } from '../../actions/profile';\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Our Teachers\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-cat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), \" Browse and connect with teachers\"), React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, profiles.length > 0 ? profiles.map(profile => React.createElement(ProfileItem, {\n    key: profile._id,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"No profiles found...\"))));\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["C:\\Users\\video\\Documents\\Bootcamp\\learnlocal-p3\\client\\src\\components\\TeachersDisplays\\Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","ProfileItem","getProfiles","Profiles","profile","profiles","loading","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,uBAA5B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,WAAF;AAAeE,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAAxB,CAAD,KAAqD;AACpER,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAGA,SAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,sCAHF,EAOE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QAAQ,CAACE,MAAT,GAAkB,CAAlB,GACCF,QAAQ,CAACG,GAAT,CAAaJ,OAAO,IAClB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACK,GAA1B;AAA+B,IAAA,OAAO,EAAEL,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ,CAPF,CADF,CAFF;AAuBD,CA3BD;;AA4BAD,QAAQ,CAACO,SAAT,GAAqB;AACnBR,EAAAA,WAAW,EAAEH,SAAS,CAACY,IAAV,CAAeC,UADT;AAEnBR,EAAAA,OAAO,EAAEL,SAAS,CAACc,MAAV,CAAiBD;AAFP,CAArB;;AAIA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,OAAO,EAAEW,KAAK,CAACX;AADiB,CAAL,CAA7B;;AAGA,eAAeJ,OAAO,CACpBc,eADoB,EAEpB;AAAEZ,EAAAA;AAAF,CAFoB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport ProfileItem from './ProfileItem'\r\nimport { getProfiles } from '../../actions/profile'\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles()\r\n  }, [getProfiles])\r\n  return (\r\n\r\n    <Fragment>\r\n      <div className='container'>\r\n\r\n        <h1 className='large text-primary'>Our Teachers</h1>\r\n        <p className='lead'>\r\n          <i className='fas fa-cat' /> Browse and connect with\r\n            teachers\r\n        </p>\r\n        <div className='profiles'>\r\n          {profiles.length > 0 ? (\r\n            profiles.map(profile => (\r\n              <ProfileItem key={profile._id} profile={profile} />\r\n            ))\r\n          ) : (\r\n            <h4>No profiles found...</h4>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n\r\n  )\r\n}\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n})\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfiles }\r\n)(Profiles)\r\n"]},"metadata":{},"sourceType":"module"}