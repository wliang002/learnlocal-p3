{"ast":null,"code":"var _jsxFileName = \"/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/src/components/StudentView/Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../Landing/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport ProfileClasses from './ProfileClasses';\nimport ClassCard from '../ClassCard/ClassCard';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Back To Teachers\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Edit Profile\"), React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Classes\"), profile.events.length > 0 ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(ClassCard, {\n    event: profile.events,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"No class available for this teacher \"))))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/src/components/StudentView/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","getProfileById","ProfileClasses","ClassCard","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","events","length","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfH,EAAAA,cADe;AAEfI,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAFM;AAGfC,EAAAA,IAHe;AAIfC,EAAAA;AAJe,CAAD,KAKV;AACJZ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEN,CAACT,cAAD,EAAiBO,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFM,CAAT;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,KAAK,IAAZ,IAAoBC,OAApB,GACG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAKGC,IAAI,CAACI,eAAL,IACHJ,IAAI,CAACD,OAAL,KAAiB,KADd,IAEHC,IAAI,CAACK,IAAL,CAAUC,GAAV,KAAkBR,OAAO,CAACO,IAAR,CAAaC,GAF5B,IAGH,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARA,EAYE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGR,OAAO,CAACS,MAAR,CAAeC,MAAf,GAAwB,CAAxB,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEV,OAAO,CAACS,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAbJ,CADF,CAZF,CAJJ,CADF,CADF;AAyCD,CAnDD;;AAqDAV,OAAO,CAACY,SAAR,GAAoB;AAClBf,EAAAA,cAAc,EAAEJ,SAAS,CAACoB,IAAV,CAAeC,UADb;AAElBb,EAAAA,OAAO,EAAER,SAAS,CAACsB,MAAV,CAAiBD,UAFR;AAGlBX,EAAAA,IAAI,EAAEV,SAAS,CAACsB,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChChB,EAAAA,OAAO,EAAEgB,KAAK,CAAChB,OADiB;AAEhCE,EAAAA,IAAI,EAAEc,KAAK,CAACd;AAFoB,CAAL,CAA7B;;AAKA,eAAeR,OAAO,CACpBqB,eADoB,EAEpB;AAAEnB,EAAAA;AAAF,CAFoB,CAAP,CAGbG,OAHa,CAAf","sourcesContent":["\nimport React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Spinner from '../Landing/Spinner'\nimport { getProfileById } from '../../actions/profile'\nimport ProfileClasses from './ProfileClasses'\nimport ClassCard from '../ClassCard/ClassCard'\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id)\n  }, [getProfileById, match.params.id])\n\n  return (\n    <Fragment>\n      <div className='container'>\n        {profile === null || loading ? (\n            <Spinner />\n        ) : (\n          <Fragment>\n\n            <Link to='/profiles' className='btn btn-light'>\n          Back To Teachers\n            </Link>\n            {auth.isAuthenticated &&\n          auth.loading === false &&\n          auth.user._id === profile.user._id && (\n          <Link to='/edit-profile' className='btn btn-dark'>\n              Edit Profile\n              </Link>\n            )}\n            <div className='profile-grid my-1'>\n              <div className='profile-exp bg-white p-2'>\n                <h2 className='text-primary'>Classes</h2>\n                {profile.events.length > 0 ? (\n                  <Fragment>\n                    <ClassCard event={profile.events} />\n                    {/* {profile.events.map(events => (\n                      <ProfileClasses\n                        key={events._id}\n                        events={events}\n                      />\n                    ))} */}\n                  </Fragment>\n                ) : (\n                  <h4>No class available for this teacher </h4>\n                )}\n              </div>\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n})\n\nexport default connect(\n  mapStateToProps,\n  { getProfileById }\n)(Profile)\n"]},"metadata":{},"sourceType":"module"}