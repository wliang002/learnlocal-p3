{"ast":null,"code":"var _jsxFileName = \"/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/src/components/ClassCard/MapTest.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './MapClassCard.css';\nimport ReactMapboxGl from 'react-mapbox-gl';\nimport ClassCard from './ClassCard';\nimport axios from 'axios';\nimport Geocode from 'react-geocode';\nGeocode.setApiKey('AIzaSyDnRYpEtmDx_-7PQ_xHhiF9els9bGTI6t4');\nGeocode.enableDebug();\nconst Map = ReactMapboxGl({\n  accessToken: 'pk.eyJ1IjoibGVhcm5sb2NhbCIsImEiOiJjanlkZ2dram4wcHY1M2ptZm8wNGZrNzVkIn0.SnFaLsmeVQkX5XSj8-pp-A'\n});\n\nconst converter = address => {\n  Geocode.fromAddress(address).then(response => {\n    const _response$results$0$g = response.results[0].geometry.location,\n          lat = _response$results$0$g.lat,\n          lng = _response$results$0$g.lng;\n    console.log(address);\n    console.log(lat, lng);\n  }, error => {\n    console.error(error);\n  });\n};\n\nconst chapters = {\n  'wooden-heart-pendants': {\n    bearing: 27,\n    center: [-122.59213, 37.983088],\n    zoom: 15.5,\n    pitch: 20\n  },\n  'aldgate': {\n    duration: 6000,\n    center: [-0.07571203, 51.51424049],\n    bearing: 150,\n    zoom: 15,\n    pitch: 0\n  },\n  'london-bridge': {\n    bearing: 90,\n    center: [-0.08533793, 51.50438536],\n    zoom: 13,\n    speed: 0.6,\n    pitch: 40\n  }\n};\nlet activeChapterName = 'wooden-heart-pendants';\n\nclass MapTest extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profiles: []\n    };\n\n    this.loadProfiles = () => {\n      axios.get('/api/profile').then(response => response.json()).then(res => {\n        this.setState({\n          profiles: res.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getGeocode = () => {\n      this.state.profiles.map(pro => {\n        Geocode.fromAddress(pro.location).then(response => {\n          const _response$results$0$g2 = response.results[0].geometry.location,\n                lat = _response$results$0$g2.lat,\n                lng = _response$results$0$g2.lng;\n          console.log(lat, lng);\n        }, error => {\n          console.error(error);\n        });\n      });\n    };\n\n    this.handleScroll = () => {\n      const chapterNames = Object.keys(chapters);\n\n      for (let i = 0; i < chapterNames.length; i++) {\n        let chapterName = chapterNames[i];\n\n        if (this.isElementOnScreen(chapterName)) {\n          console.log('handleScroll | chapterName', chapterName);\n          this.setActiveChapter(chapterName);\n          break;\n        }\n      }\n    };\n\n    this.setActiveChapter = chapterName => {\n      if (chapterName === activeChapterName) return;\n      console.log('setActiveChapter | setState to', chapters[activeChapterName]['center']);\n      this.setState({\n        'center': chapters[activeChapterName]['center']\n      });\n      document.getElementById(chapterName).setAttribute('class', 'active');\n      document.getElementById(activeChapterName).setAttribute('class', '');\n      activeChapterName = chapterName;\n    };\n\n    this.isElementOnScreen = id => {\n      const element = document.getElementById(id);\n      const bounds = element.getBoundingClientRect();\n      return bounds.top < window.innerHeight && bounds.bottom - 1000 > 0;\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n    this.loadProfiles();\n    console.log('hererere1' + this.state.profiles);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n    this.loadProfiles();\n    console.log('hererere2' + this.state.profiles);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"MapClassCardContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Map, {\n      style: \"mapbox://styles/mapbox/streets-v10\",\n      center: [-122.27087, 37.87189],\n      zoom: [15.0],\n      bearing: [0],\n      pitch: [0],\n      className: \"the-map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"features\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      id: \"wooden-heart-pendants\",\n      class: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      id: \"aldgate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Aldgate Station\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Arthur Cadogan West was found dead, head crushed in on train tracks at Aldgate Station at 6AM Tuesday morning. West worked at Woolwich Arsenal on the Bruce-Partington submarine, a secret military project. Plans for the submarine had been stolen and seven of the ten missing papers were found in West's possession. Mycroft implores Sherlock to take the case and recover the three missing papers.\")), React.createElement(\"section\", {\n      id: \"london-bridge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"London Bridge\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Holmes and Watson's investigations take them across London. Sherlock deduces that West was murdered elsewhere, then moved to Aldgate Station to create the illusion that he was crushed on the tracks by a train. On their way to Woolwich Sherlock dispatches a telegram to Mycroft at London Bridge: \\\"Send list of all foreign spies known to be in England, with full address.\\\"\"))));\n  }\n\n}\n\nexport default MapTest;","map":{"version":3,"sources":["/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/src/components/ClassCard/MapTest.js"],"names":["React","Link","styles","ReactMapboxGl","ClassCard","axios","Geocode","setApiKey","enableDebug","Map","accessToken","converter","address","fromAddress","then","response","results","geometry","location","lat","lng","console","log","error","chapters","bearing","center","zoom","pitch","duration","speed","activeChapterName","MapTest","Component","state","profiles","loadProfiles","get","json","res","setState","data","catch","err","getGeocode","map","pro","handleScroll","chapterNames","Object","keys","i","length","chapterName","isElementOnScreen","setActiveChapter","document","getElementById","setAttribute","id","element","bounds","getBoundingClientRect","top","window","innerHeight","bottom","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styles from './MapClassCard.css'\nimport ReactMapboxGl from 'react-mapbox-gl'\nimport ClassCard from './ClassCard'\nimport axios from 'axios'\nimport Geocode from 'react-geocode'\n\n\n\nGeocode.setApiKey('AIzaSyDnRYpEtmDx_-7PQ_xHhiF9els9bGTI6t4')\n\nGeocode.enableDebug()\n\nconst Map = ReactMapboxGl({\n  accessToken: 'pk.eyJ1IjoibGVhcm5sb2NhbCIsImEiOiJjanlkZ2dram4wcHY1M2ptZm8wNGZrNzVkIn0.SnFaLsmeVQkX5XSj8-pp-A'\n})\n\nconst converter = (address) =>{\n        Geocode.fromAddress(address).then(\n            response => {\n              const { lat, lng } = response.results[0].geometry.location\n              console.log(address)\n              console.log(lat, lng)\n            },\n            error => {\n              console.error(error)\n            }\n          )\n    \n}\nconst chapters = {\n  'wooden-heart-pendants': {\n    bearing: 27,\n    center: [-122.59213, 37.983088],\n    zoom: 15.5,\n    pitch: 20\n  },\n  'aldgate': {\n    duration: 6000,\n    center: [-0.07571203, 51.51424049],\n    bearing: 150,\n    zoom: 15,\n    pitch: 0\n  },\n  'london-bridge': {\n    bearing: 90,\n    center: [-0.08533793, 51.50438536],\n    zoom: 13,\n    speed: 0.6,\n    pitch: 40\n    }\n}\n\nlet activeChapterName = 'wooden-heart-pendants';\n\nclass MapTest extends React.Component {\n    state ={\n         profiles: []\n    }\n\n    loadProfiles = () => {\n        axios.get('/api/profile')\n        .then(response => response.json())\n        .then(res => {\n            this.setState({ profiles: res.data })       \n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    getGeocode = () => {\n        this.state.profiles.map(pro => {\n            Geocode.fromAddress(pro.location).then(\n                response => {\n                  const { lat, lng } = response.results[0].geometry.location;\n                  console.log(lat, lng);\n                },\n                error => {\n                  console.error(error);\n                }\n              );\n        })        \n    }\n    \n    componentDidMount() {\n        window.addEventListener('scroll', this.handleScroll);\n        this.loadProfiles()\n        console.log('hererere1'+this.state.profiles)\n        \n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll);\n        this.loadProfiles()\n        console.log('hererere2'+this.state.profiles)\n        \n    }\n\n    handleScroll = () => {\n        const chapterNames = Object.keys(chapters);\n        for (let i = 0; i < chapterNames.length; i++) {\n            let chapterName = chapterNames[i];\n            if (this.isElementOnScreen(chapterName)) {\n                console.log('handleScroll | chapterName', chapterName)\n                this.setActiveChapter(chapterName);\n                break;\n            }\n        }\n    }\n\n    setActiveChapter = (chapterName) => {\n        if (chapterName === activeChapterName) return;\n        console.log('setActiveChapter | setState to', chapters[activeChapterName]['center'])\n        this.setState({'center': chapters[activeChapterName]['center']})\n         \n        document.getElementById(chapterName).setAttribute('class', 'active');\n        document.getElementById(activeChapterName).setAttribute('class', '');\n         \n        activeChapterName = chapterName;\n        }\n\n    isElementOnScreen = (id) => {\n        const element = document.getElementById(id);\n        const bounds = element.getBoundingClientRect();\n        return bounds.top < window.innerHeight && bounds.bottom-1000 > 0;\n    }\n\n  render () {\n    return (\n      <div className='MapClassCardContainer'>\n         \n            <Map \n            style='mapbox://styles/mapbox/streets-v10' \n            center={[-122.27087, 37.87189]}\n            zoom={[15.0]}\n            bearing={[0]}\n            pitch={[0]}\n            className='the-map'\n        />\n          \n       \n        \n        <div id='features'>\n          <section id='wooden-heart-pendants' class='active'>\n          {/* {this.state.profiles.length > 0 ? (\n            this.state.profiles.map(profile => (\n              <ClassCard event={profile.events} />\n            ))\n          ) : (\n            <p className='sorry'>We&rsquo;re sorry, we did not find any classes...</p>\n          )} */}\n          </section>\n\n          <section id='aldgate'>\n            <h3>Aldgate Station</h3>\n            <p>Arthur Cadogan West was found dead, head crushed in on train tracks at Aldgate Station at 6AM Tuesday morning. West worked at Woolwich Arsenal on the Bruce-Partington submarine, a secret military project. Plans for the submarine had been stolen and seven of the ten missing papers were found in West's possession. Mycroft implores Sherlock to take the case and recover the three missing papers.</p>\n          </section>\n          <section id='london-bridge'>\n        <h3>London Bridge</h3>\n        <p>Holmes and Watson's investigations take them across London. Sherlock deduces that West was murdered elsewhere, then moved to Aldgate Station to create the illusion that he was crushed on the tracks by a train. On their way to Woolwich Sherlock dispatches a telegram to Mycroft at London Bridge: \"Send list of all foreign spies known to be in England, with full address.\"</p>\n        </section>\n       \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MapTest\n"]},"metadata":{},"sourceType":"module"}