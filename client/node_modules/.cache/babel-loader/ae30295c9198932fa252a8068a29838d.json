{"ast":null,"code":"var _jsxFileName = \"/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/src/components/studentView/teachersDirectory/ClassBySelectTeacher.js\";\nimport React, { Fragment, useEffect } from './node_modules/react';\nimport PropTypes from './node_modules/prop-types';\nimport { connect } from './node_modules/react-redux';\nimport Spinner from '../Landing/Spinner';\nimport { getProfileById } from '../../../actions/profile';\nimport ClassCard from '../../teachersView/ClassCard/ClassCard';\nimport '../../teachersView/dashboard/ClassDisplays.css';\nimport Wrapper from '../../teachersView/ClassCard/Wrapper'; // @resources https://github.com/prescottprue/react-redux-firebase/blob/master/docs/recipes/auth.md\n// @resources https://blog.logrocket.com/react-redux-connect-when-and-how-to-use-it-f2a1edab2013/\n\nconst ClassBySelectTeacher = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"SpecificTeachersClassesContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-earlybirds\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), \"\\xA0\", profile.user.name, \"\\u2019s Classes\"), React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, profile.events.length > 0 ? React.createElement(ClassCard, {\n    userId: match.params.id,\n    event: profile.events,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }) : React.createElement(\"p\", {\n    className: \"sorry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"We\\u2019re sorry \\u2014 this teacher is not hosting any classes right now.\")))));\n}; // @resources https://learnetto.com/tutorials/typechecking-with-proptypes\n\n\nClassBySelectTeacher.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(ClassBySelectTeacher);","map":{"version":3,"sources":["/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/src/components/studentView/teachersDirectory/ClassBySelectTeacher.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","ClassCard","Wrapper","ClassBySelectTeacher","profile","loading","match","params","id","user","name","events","length","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,sBAA3C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,OAAO,gDAAP;AACA,OAAOC,OAAP,MAAoB,sCAApB,C,CACA;AACA;;AACA,MAAMC,oBAAoB,GAAG,CAAC;AAC5BH,EAAAA,cAD4B;AAE5BI,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAFmB;AAG5BC,EAAAA;AAH4B,CAAD,KAIvB;AACJV,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEN,CAACR,cAAD,EAAiBM,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFM,CAAT;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,OAAO,KAAK,IAAZ,IAAoBC,OAApB,GACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,UACSD,OAAO,CAACK,IAAR,CAAaC,IADtB,oBADF,EAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUN,OAAO,CAACO,MAAR,CAAeC,MAAf,GAAwB,CAAxB,GACR,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEN,KAAK,CAACC,MAAN,CAAaC,EAAhC;AAAoC,IAAA,KAAK,EAAEJ,OAAO,CAACO,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAGR;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAHF,CAHF,CAJJ,CADF,CADF;AAoBD,CA7BD,C,CA8BA;;;AACAR,oBAAoB,CAACU,SAArB,GAAiC;AAC/Bb,EAAAA,cAAc,EAAEH,SAAS,CAACiB,IAAV,CAAeC,UADA;AAE/BX,EAAAA,OAAO,EAAEP,SAAS,CAACmB,MAAV,CAAiBD;AAFK,CAAjC;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,OAAO,EAAEc,KAAK,CAACd;AADiB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CACpBmB,eADoB,EAEpB;AAAEjB,EAAAA;AAAF,CAFoB,CAAP,CAGbG,oBAHa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from './node_modules/react'\nimport PropTypes from './node_modules/prop-types'\nimport { connect } from './node_modules/react-redux'\nimport Spinner from '../Landing/Spinner'\nimport { getProfileById } from '../../../actions/profile'\nimport ClassCard from '../../teachersView/ClassCard/ClassCard'\nimport '../../teachersView/dashboard/ClassDisplays.css'\nimport Wrapper from '../../teachersView/ClassCard/Wrapper'\n// @resources https://github.com/prescottprue/react-redux-firebase/blob/master/docs/recipes/auth.md\n// @resources https://blog.logrocket.com/react-redux-connect-when-and-how-to-use-it-f2a1edab2013/\nconst ClassBySelectTeacher = ({\n  getProfileById,\n  profile: { profile, loading },\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id)\n  }, [getProfileById, match.params.id])\n\n  return (\n    <Fragment>\n      <div className='SpecificTeachersClassesContainer'>\n        {profile === null || loading ? (\n          <Spinner />\n        ) : (\n          <Fragment>\n            <h1><i className='fab fa-earlybirds' />\n              &nbsp;{profile.user.name}&rsquo;s Classes</h1>\n            <Wrapper>{profile.events.length > 0 ? (\n              <ClassCard userId={match.params.id} event={profile.events} />\n            ) : (\n              <p className='sorry'>We&rsquo;re sorry &mdash; this teacher is not hosting any classes right now.</p>\n\n            )}</Wrapper>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n// @resources https://learnetto.com/tutorials/typechecking-with-proptypes\nClassBySelectTeacher.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n})\n\nexport default connect(\n  mapStateToProps,\n  { getProfileById }\n)(ClassBySelectTeacher)\n"]},"metadata":{},"sourceType":"module"}