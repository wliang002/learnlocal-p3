{"ast":null,"code":"var _jsxFileName = \"/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/src/components/StudentView/Events.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../Landing/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport ProfileExperience from './ProfileExperience';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Back To Profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Edit Profile\"), React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Classes\"), profile.classes.length > 0 ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, profile.experience.map(experience => React.createElement(ProfileClasses, {\n    key: experience._id,\n    experience: experience,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"No classes available for this teacher \")))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/src/components/StudentView/Events.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","getProfileById","ProfileExperience","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","classes","length","experience","map","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AACA,MAAMC,OAAO,GAAG,CAAC;AACfF,EAAAA,cADe;AAEfG,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAFM;AAGfC,EAAAA,IAHe;AAIfC,EAAAA;AAJe,CAAD,KAKV;AACJX,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEN,CAACR,cAAD,EAAiBM,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFM,CAAT;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,KAAK,IAAZ,IAAoBC,OAApB,GACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAIGC,IAAI,CAACI,eAAL,IACDJ,IAAI,CAACD,OAAL,KAAiB,KADhB,IAEDC,IAAI,CAACK,IAAL,CAAUC,GAAV,KAAkBR,OAAO,CAACO,IAAR,CAAaC,GAF9B,IAGC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,EAWE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGR,OAAO,CAACS,OAAR,CAAgBC,MAAhB,GAAyB,CAAzB,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,OAAO,CAACW,UAAR,CAAmBC,GAAnB,CAAuBD,UAAU,IAChC,oBAAC,cAAD;AACE,IAAA,GAAG,EAAEA,UAAU,CAACH,GADlB;AAEE,IAAA,UAAU,EAAEG,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADD,GAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAZJ,CAHF,CAXF,CAJJ,CADF;AAuCD,CAjDD;;AAmDAZ,OAAO,CAACc,SAAR,GAAoB;AAClBhB,EAAAA,cAAc,EAAEJ,SAAS,CAACqB,IAAV,CAAeC,UADb;AAElBf,EAAAA,OAAO,EAAEP,SAAS,CAACuB,MAAV,CAAiBD,UAFR;AAGlBb,EAAAA,IAAI,EAAET,SAAS,CAACuB,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChClB,EAAAA,OAAO,EAAEkB,KAAK,CAAClB,OADiB;AAEhCE,EAAAA,IAAI,EAAEgB,KAAK,CAAChB;AAFoB,CAAL,CAA7B;;AAKA,eAAeP,OAAO,CACpBsB,eADoB,EAEpB;AAAEpB,EAAAA;AAAF,CAFoB,CAAP,CAGbE,OAHa,CAAf","sourcesContent":["\nimport React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Spinner from '../Landing/Spinner'\nimport { getProfileById } from '../../actions/profile'\nimport ProfileExperience from './ProfileExperience';\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id)\n  }, [getProfileById, match.params.id])\n\n  return (\n    <Fragment>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to='/profiles' className='btn btn-light'>\n          Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n          auth.loading === false &&\n          auth.user._id === profile.user._id && (\n            <Link to='/edit-profile' className='btn btn-dark'>\n              Edit Profile\n            </Link>\n          )}\n          <div className='profile-grid my-1'>\n            {/* <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} /> */}\n            <div className='profile-exp bg-white p-2'>\n              <h2 className='text-primary'>Classes</h2>\n              {profile.classes.length > 0 ? (\n                <Fragment>\n                  {profile.experience.map(experience => (\n                    <ProfileClasses\n                      key={experience._id}\n                      experience={experience}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No classes available for this teacher </h4>\n              )}\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  )\n}\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n})\n\nexport default connect(\n  mapStateToProps,\n  { getProfileById }\n)(Profile)\n"]},"metadata":{},"sourceType":"module"}