{"ast":null,"code":"var _jsxFileName = \"/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/src/components/TeachersDisplays/Profiles.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ProfileItem from './ProfileItem';\nimport Spinner from '../Landing/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport './Profiles.css';\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["/Users/weixinliang/Desktop/project3/current/learnlocal-p3/client/src/components/TeachersDisplays/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","ProfileItem","Spinner","getProfiles","Profiles","profile","profiles","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,WAAF;AAAeE,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAAxB,CAAD,KAAqD;AACpET,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAGA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OAAO,GACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AAaD,CAjBD;;AAkBAH,QAAQ,CAACI,SAAT,GAAqB;AACnBL,EAAAA,WAAW,EAAEJ,SAAS,CAACU,IAAV,CAAeC,UADT;AAEnBL,EAAAA,OAAO,EAAEN,SAAS,CAACY,MAAV,CAAiBD;AAFP,CAArB;;AAIA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCR,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AADiB,CAAL,CAA7B;;AAGA,eAAeL,OAAO,CACpBY,eADoB,EAEpB;AAAET,EAAAA;AAAF,CAFoB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport ProfileItem from './ProfileItem'\nimport Spinner from '../Landing/Spinner'\nimport { getProfiles } from '../../actions/profile'\nimport './Profiles.css'\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles()\n  }, [getProfiles])\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n\n        </Fragment>\n      )}\n      \n    </Fragment>\n\n  )\n}\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n  profile: state.profile\n})\nexport default connect(\n  mapStateToProps,\n  { getProfiles }\n)(Profiles)\n"]},"metadata":{},"sourceType":"module"}